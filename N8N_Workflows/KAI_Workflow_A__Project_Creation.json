{
  "createdAt": "2025-09-18T14:05:34.912Z",
  "updatedAt": "2025-09-18T22:54:44.000Z",
  "id": "HdA0vwJvVM5fN29P",
  "name": "KAI Workflow A: Project Creation",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "149939a6-b691-4714-a2bd-55a5c8cbf75c",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "position": [
        -2016,
        976
      ],
      "webhookId": "d4f9d502-697b-4e04-ba04-d58290570d76",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "LOIWW9vGRpuYVz42",
          "name": "KAI_ProjectManager"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "id": "df59397e-4bc7-46f3-8021-6268121596e4",
      "name": "Telegram",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1360,
        1104
      ],
      "webhookId": "cef5d394-ff36-430c-8863-e6972bcaf241",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "LOIWW9vGRpuYVz42",
          "name": "KAI_ProjectManager"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "id": "199ee05b-84ab-4408-8120-87ce2e360bf3",
      "name": "Download Audio",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -464,
        640
      ],
      "webhookId": "8fd93c8a-3c1d-4c10-9267-3e9dca10f98b",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "LOIWW9vGRpuYVz42",
          "name": "KAI_ProjectManager"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "translate",
        "options": {}
      },
      "id": "eccc19fe-cc6b-457b-96f4-f680604f8eed",
      "name": "Translate to Text",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        -208,
        640
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "uXvEX4uzPRSlqpAw",
          "name": "PersonalPlus"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "ef9bb358-eb11-4603-b1d4-b232ddc2a539",
      "name": "Download PDF",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -464,
        1024
      ],
      "webhookId": "df978288-0019-41eb-a225-e8504ab5d0c9",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "LOIWW9vGRpuYVz42",
          "name": "KAI_ProjectManager"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "58ea8bd9-8c7a-4d01-9775-7d5f6af3d979",
      "name": "Download Image",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -464,
        896
      ],
      "webhookId": "18f95187-3e4f-47e0-a3ec-1ec12935f470",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "LOIWW9vGRpuYVz42",
          "name": "KAI_ProjectManager"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "for (const item of items) {\n  if (item.binary && item.binary['data']) {\n    const fileName = item.binary['data'].fileName || '';\n    const lowerName = fileName.toLowerCase();\n\n    if (lowerName.endsWith('.png')) {\n      item.binary['data'].mimeType = 'image/png';\n    } else if (lowerName.endsWith('.jpg') || lowerName.endsWith('.jpeg')) {\n      item.binary['data'].mimeType = 'image/jpeg';\n    } else if (lowerName.endsWith('.webp')) {\n      item.binary['data'].mimeType = 'image/webp';\n    }\n  }\n}\nreturn items;\n\n\n\n\n"
      },
      "id": "dd5edee9-9e3e-4d6a-af11-41792516d82c",
      "name": "Fix mimeType",
      "type": "n8n-nodes-base.code",
      "position": [
        -336,
        896
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.photo[0].file_id }}",
        "additionalFields": {}
      },
      "id": "4ecf43e8-8657-47b4-aa02-447eee7be3ce",
      "name": "Download Photo",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -464,
        768
      ],
      "webhookId": "0f7b39d1-3a68-4f28-b3ea-68f9f57ba4c4",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "LOIWW9vGRpuYVz42",
          "name": "KAI_ProjectManager"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "for (const item of items) {\n  if (item.binary && item.binary['data']) {\n    const fileName = item.binary['data'].fileName || '';\n    const lowerName = fileName.toLowerCase();\n\n    if (lowerName.endsWith('.png')) {\n      item.binary['data'].mimeType = 'image/png';\n    } else if (lowerName.endsWith('.jpg') || lowerName.endsWith('.jpeg')) {\n      item.binary['data'].mimeType = 'image/jpeg';\n    } else if (lowerName.endsWith('.webp')) {\n      item.binary['data'].mimeType = 'image/webp';\n    } else if (lowerName.endsWith('.gif')) {\n      item.binary['data'].mimeType = 'image/gif';\n    }\n  }\n}\nreturn items;\n\n\n\n/** This is for jpeg. Delete later\nfor (const item of items) {\n  if (item.binary && item.binary['data']) {\n    item.binary['data'].mimeType = 'image/jpeg';\n  }\n}\nreturn items;\n**/\n\n"
      },
      "id": "820a2c27-8815-4bef-b43c-825fb847c402",
      "name": "Fix mimeType1",
      "type": "n8n-nodes-base.code",
      "position": [
        -336,
        768
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Describe the contents of this photo/image",
        "inputType": "base64",
        "options": {}
      },
      "id": "c37c5ab0-a7a4-4075-98b6-9cc32a8e597d",
      "name": "Photo to text",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        -208,
        768
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "uXvEX4uzPRSlqpAw",
          "name": "PersonalPlus"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "95deb83e-1d69-46b6-92e3-59e667d698fe",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              },
              "leftValue": "={{ $json.is_supported }}",
              "rightValue": ""
            },
            {
              "id": "5d9924b8-b8e7-4640-9675-8123e1562fa8",
              "operator": {
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json.reason }}",
              "rightValue": "supported_file_type"
            }
          ]
        },
        "options": {}
      },
      "id": "5c0f58e3-62a5-4a1f-9b9c-e0a89306b16e",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "position": [
        -928,
        1120
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "4b4ba4b6-219b-47c7-a573-2fd5c89c69f9",
      "name": "Download Spreadsheet",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -464,
        1312
      ],
      "webhookId": "dd32c374-ce4a-4d15-a554-c4633927dfcd",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "LOIWW9vGRpuYVz42",
          "name": "KAI_ProjectManager"
        }
      }
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "2bb98673-a61b-43d7-8cd9-044fe4bd7865",
      "name": "Extract from PDF",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        -336,
        1024
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "id": "86e53440-792c-4670-9c24-705d7bb7f9d6",
      "name": "Extract from Spreadsheet",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        -336,
        1312
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "const supportedExtensions = ['.jpg', '.jpeg', '.png', '.webp', '.pdf', '.doc', '.docx', '.xls', '.xlsx', '.json', '.xml'];\n\nreturn $input.all().map(item => {\n  // Try to extract file name from binary first, else fall back to message.document\n  const fileName = item.binary?.data?.fileName || item.json?.message?.document?.file_name || '';\n  const lowerName = fileName.toLowerCase();\n\n  const isSupported = supportedExtensions.some(ext => lowerName.endsWith(ext));\n\n  if (!isSupported) {\n    return {\n       json: {\n        is_supported: false,\n        reason: \"unsupported_file_type\",\n        message: '‚ùå The uploaded file type is not supported. Please submit one of the following formats: .jpg, jpeg, .png, .webp, .pdf, .doc, .docx, .xls, .xlsx, .json, .xml',\n        fileName: fileName || 'Unknown file'\n      }\n    };\n  }\n\n  // File is supported ‚Äì pass it forward untouched\n  return {\n    ...item,\n    json: {\n      ...(item.json || {}),\n      is_supported: true,\n      reason: \"supported_file_type\"\n    }\n  };\n});\n"
      },
      "id": "84d88e43-0f47-446b-9fc8-f567aab0d25a",
      "name": "Supported Document File Types",
      "type": "n8n-nodes-base.code",
      "position": [
        -1040,
        1040
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const results = [];\nfor (const item of $input.all()) {\nconst fileName = item.json?.fileName || item.json?.message?.document?.file_name || '';\nconst ext = fileName.toLowerCase().split('.').pop();\n\nlet type = 'unknown';\nif (['jpg', 'jpeg', 'png', 'webp'].includes(ext)) {\ntype = 'image';\n} else if (['pdf'].includes(ext)) {\ntype = 'pdf';\n} else if (['doc', 'docx'].includes(ext)) {\ntype = 'word document';\n} else if (['xls', 'xlsx'].includes(ext)) {\ntype = 'spreadsheet';\n} else if (['json'].includes(ext)) {\ntype = 'json';\n} else if (['xml'].includes(ext)) {\ntype = 'xml file'\n}\nitem.json.fileTypeCategory = type;\nresults.push(item);\n}\nreturn results;\n"
      },
      "id": "6d1e331f-7fdb-4073-b57b-1770f9414618",
      "name": "Group Similar Documents",
      "type": "n8n-nodes-base.code",
      "position": [
        -800,
        1024
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "fcb767ee-565e-4b56-a54e-6f97f739fc24",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Text"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "c1016c40-f8f2-4e08-8ec8-5cdb88f5c87a",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.voice }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "4f28ab72-33ae-45fa-b3ba-51cefe600434",
                    "operator": {
                      "type": "array",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.photo }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Photo"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "47b17a80-c23f-4b7c-9761-f045715334f4",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "leftValue": "={{ $json.message.document }}",
                    "rightValue": ""
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Document"
            }
          ]
        },
        "options": {}
      },
      "id": "bbe28a30-4d47-4dec-94b7-cea86837abce",
      "name": "Input Message Router",
      "type": "n8n-nodes-base.switch",
      "position": [
        -1168,
        960
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "b688a3fb-8070-4506-9c9d-526d74c2605b",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "image"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "157a49a2-d5fb-425d-bb23-6ac16bdc45a2",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "pdf"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "41b0d6a4-89a7-4e3b-9e4a-00689def90aa",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "word document"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Word Document"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "478f9497-7fc8-46e9-b834-22c78bbc7b05",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "spreadsheet"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "Spreadsheet"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "d90c32c0-9d28-40d1-b11c-4fa9a14b7df5",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "json"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "JSON"
            },
            {
              "conditions": {
                "options": {
                  "version": 2,
                  "leftValue": "",
                  "caseSensitive": true,
                  "typeValidation": "strict"
                },
                "combinator": "and",
                "conditions": [
                  {
                    "id": "4d4f7af7-ca8f-4a22-9af1-b3c93f51958f",
                    "operator": {
                      "name": "filter.operator.equals",
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.fileTypeCategory }}",
                    "rightValue": "xml file"
                  }
                ]
              },
              "renameOutput": true,
              "outputKey": "XML File"
            }
          ]
        },
        "options": {}
      },
      "id": "5a728387-f4dc-4560-84b2-4d9879cbb81b",
      "name": "Document Router",
      "type": "n8n-nodes-base.switch",
      "position": [
        -672,
        960
      ],
      "typeVersion": 3.2
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "fb741ef4-9cf2-4951-9089-7e74dc2bc4f6",
      "name": "Download JSON",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -464,
        1472
      ],
      "webhookId": "054c9c27-f5d2-405c-9d65-d40b8d811c93",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "LOIWW9vGRpuYVz42",
          "name": "KAI_ProjectManager"
        }
      }
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "id": "f44ed592-e931-4b17-97ab-4a9b9f16d90c",
      "name": "Extract from JSON",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        -336,
        1472
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "3b490d79-374f-476f-9dce-a464af5d639f",
      "name": "Download XML",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -464,
        1616
      ],
      "webhookId": "81609623-dd49-4311-abf6-62d668f6613b",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "LOIWW9vGRpuYVz42",
          "name": "KAI_ProjectManager"
        }
      }
    },
    {
      "parameters": {
        "operation": "xml",
        "options": {}
      },
      "id": "895e8af0-5275-4ee5-b9dc-a6980d0df801",
      "name": "Extract from XML",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        -336,
        1616
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.document.file_id }}",
        "additionalFields": {}
      },
      "id": "1b0580e2-63c5-4e57-9bc8-bffef7389396",
      "name": "Download Word Document",
      "type": "n8n-nodes-base.telegram",
      "position": [
        -464,
        1152
      ],
      "webhookId": "140b8f93-ff1b-4c43-a131-e02a6b753f35",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "LOIWW9vGRpuYVz42",
          "name": "KAI_ProjectManager"
        }
      }
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "id": "e1173054-6df7-41ed-b025-fd57d37f1442",
      "name": "File to Base64",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        -336,
        1152
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://v2.convertapi.com/convert/docx/to/txt",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer YOUR_API_KEY_HERE"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"Parameters\": [\n        {\n            \"Name\": \"File\",\n            \"FileValue\": {\n                \"Name\": \"{{ $('Download Word Document').item.binary.data.fileName }}\",\n                \"Data\": \"{{ $json.data }}\"\n            }\n        },\n        {\n            \"Name\": \"StoreFile\",\n            \"Value\": true\n        }\n    ]\n}",
        "options": {}
      },
      "id": "5f0a4dc8-ffb8-4e50-a6cf-7d83586a4ae2",
      "name": "Convert to text (convertapi.com)",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -208,
        1152
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "={{ $json.Files[0].Url }}",
        "options": {}
      },
      "id": "fd36c012-ccdf-4250-83af-60bb896e1756",
      "name": "Download Text",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -80,
        1152
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini",
          "cachedResultName": "GPT-4O-MINI"
        },
        "text": "Describe the content of this image.",
        "inputType": "base64",
        "options": {
          "detail": "auto"
        }
      },
      "id": "212911aa-3362-468f-be82-68d55bb09a02",
      "name": "Photo to text1",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "position": [
        -208,
        896
      ],
      "typeVersion": 1.8,
      "credentials": {
        "openAiApi": {
          "id": "uXvEX4uzPRSlqpAw",
          "name": "PersonalPlus"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "74f774a8-e230-44fe-8d46-7a0ce7f34b42",
              "name": "text",
              "type": "string",
              "value": "={{ $json.message.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5c3011f4-a394-4259-8244-70a556c2933d",
      "name": "Extract Text",
      "type": "n8n-nodes-base.set",
      "position": [
        -464,
        528
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5a6a5c34-c6bf-4d00-bb51-2ec5cd4af9e9",
              "name": "text",
              "type": "string",
              "value": "=Photo content: {{ $json.content }}\n\nPhoto caption: {{ $('Telegram Trigger').item.json.message.caption }}"
            }
          ]
        },
        "options": {}
      },
      "id": "1f735274-74cc-41ed-ba53-5fa8c900e9fa",
      "name": "Extract Text & Content",
      "type": "n8n-nodes-base.set",
      "position": [
        -64,
        832
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cd3cb375-33a8-479e-b320-6d43e23c906e",
              "name": "text",
              "type": "string",
              "value": "={{ $json.message }}"
            }
          ]
        },
        "options": {}
      },
      "id": "16f2d075-7478-4ff8-83a3-6e9f583eca28",
      "name": "Extract Error Message",
      "type": "n8n-nodes-base.set",
      "position": [
        -336,
        1760
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "35b5e034-cf94-499c-967c-1aeb4edf1b58",
              "name": "text",
              "type": "string",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f3fe64ef-a55a-4fec-8d8f-90d2564a7e23",
      "name": "Extract Text1",
      "type": "n8n-nodes-base.set",
      "position": [
        -208,
        1312
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d480f972-a046-4ff1-9d19-ac586c372cbd",
              "name": "text",
              "type": "string",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "43c4e9b7-8a1a-4a10-9742-ddfdc769e886",
      "name": "Extract Text2",
      "type": "n8n-nodes-base.set",
      "position": [
        -208,
        1472
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f7d3f22b-cca6-4d5d-9e70-b4075e542979",
              "name": "text",
              "type": "string",
              "value": "={{ $json }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8f758290-a86e-4003-80f4-329840655b12",
      "name": "Extract Text3",
      "type": "n8n-nodes-base.set",
      "position": [
        -208,
        1616
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6bb76f62-7f3e-432d-9c96-4c1d1c3e15f1",
              "name": "text",
              "type": "string",
              "value": "={{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9b37f022-d805-4f0f-ba46-db06ea45e30d",
      "name": "Extract Text4",
      "type": "n8n-nodes-base.set",
      "position": [
        -208,
        1024
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d26a3dd0-8bb2-4f25-9c7d-3542dc039861",
              "name": "text",
              "type": "string",
              "value": "={{ $json.data }}"
            }
          ]
        },
        "options": {}
      },
      "id": "9139e371-1fe4-4365-9198-928ffbe19cf0",
      "name": "Extract Text5",
      "type": "n8n-nodes-base.set",
      "position": [
        48,
        1152
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Todays Date and time is: {{ $now.format('MM-dd-yyyy :: hh:mm:ss') }}\n\nUser Message: {{ $json.text }}\n\nYou are Project Helper, an AI agent that assists with managing and tracking projects.\nYou must use the following tool nodes available to you:\n\nNotion Tool Node: create, update, and query project databases, tasks, and goals.\n\nCore Instructions:\n\nParsed intent (e.g., create project, update progress, add error, pivot project, etc.)\n\nRelated Project ID (if any)\n\nAI response summary\n\nProject Management Workflow\n\nWhen a user provides a new project idea, ask for these details step-by-step if not included:\n\nProject name\n\nType (website, business idea, game, etc.)\n\nDeadline/timescale\n\nGoals or desired outcomes\n\nKnown constraints or risks\n\nStore this data in Notion under the Projects database.\n\nGenerate a unique Project ID (PRJ-###) and return it to the user.\n\nProgress Tracking:\n\nUsers may report updates naturally (e.g., ‚ÄúI finished the prototype for PRJ-105‚Äù).\n\nDetect changes such as:\n\nNew tasks\n\nCompleted tasks\n\nProgress % updates\n\nErrors or workarounds encountered\n\nPivoting & Adjustments\n\nIf a project changes direction (user says ‚ÄúI need to pivot‚Äù), ask clarifying questions:\n\nWhy the pivot is needed\n\nWhat parts are affected\n\nWhat new tasks or goals should replace the old ones\n\nUpdate Notion to reflect the new scope and mark old data as ‚Äúarchived.‚Äù\n\nReminders & Summaries:\n\nPeriodically review projects in Notion with deadlines approaching or no updates recently.\n\nSend reminders via chat and generate summaries using Notion data.\n\n\nOutput Discipline:\n\nIf you don‚Äôt have enough information, ask questions first instead of assuming.\n\nEvery response should:\n\nConfirm what action was taken or what info is needed.\n\nSuggest a next step or clarifying question.\n\nExample Flow:\n\nUser: ‚Äú/newproject Build a marketplace app‚Äù\n\nAgent:\n\nLogs message to Google Sheets.\n\nAsks for missing metadata (deadline, type, etc.).\n\nCreates a new entry in Notion.\n\nReplies with confirmation and generated Project ID.",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        400,
        1088
      ],
      "id": "71ca0d9a-7fb9-49c1-a5c0-5cf88fee88e3",
      "name": "KAI Project Manager"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1.1,
      "position": [
        768,
        1344
      ],
      "id": "7f950e6f-8b16-49c2-b558-e6cbefeb7b7b",
      "name": "Think"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        304,
        1344
      ],
      "id": "081ed85e-de3c-4820-9041-de8aa0c57a50",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "79jHL8vAUxLHQecL",
          "name": "Polidata-beta GPT"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "4",
        "tableName": "ProjectManagerChatHistory",
        "contextWindowLength": 200
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        464,
        1328
      ],
      "id": "697789b2-9ff0-457b-9549-29a842b1dd94",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "9jmFygajZzhlsDfK",
          "name": "Postgres KIA Project Manager"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendChatAction",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "id": "16ca2d5a-d04f-4fb3-9ea9-e6cf70e1bd5c",
      "name": "Typing....",
      "type": "n8n-nodes-base.telegram",
      "position": [
        1056,
        992
      ],
      "webhookId": "2dc0054b-d8f4-4149-8aff-0893c69965a3",
      "typeVersion": 1.2,
      "credentials": {
        "telegramApi": {
          "id": "LOIWW9vGRpuYVz42",
          "name": "KAI_ProjectManager"
        }
      }
    },
    {
      "parameters": {
        "amount": 2
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -336,
        448
      ],
      "id": "2d7fcaea-52d5-436b-bf2d-a295d9389761",
      "name": "Wait",
      "webhookId": "2f9e21c1-1f6a-4632-957b-1008b0247415"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "312523c3-708e-426d-a67d-f8f48f06a870",
              "leftValue": "={{ $('Telegram Trigger').item.json.message.from.id }}",
              "rightValue": "",
              "operator": {
                "type": "number",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "175c30f4-bc8a-4781-a34d-539a612c6209",
              "leftValue": "={{ $json.output }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        640,
        880
      ],
      "id": "f8764504-c5bc-4d48-9402-be645316ab39",
      "name": "Thinking"
    },
    {
      "parameters": {
        "resource": "database",
        "operation": "getAll",
        "returnAll": true,
        "simple": false
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        544,
        1616
      ],
      "id": "29f360ab-c867-44ad-a9b4-ab3283663a4a",
      "name": "Get many databases in Notion",
      "credentials": {
        "notionApi": {
          "id": "Z0VZpF1Px5Bdy5Is",
          "name": "KAI Notion"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "https://www.notion.so/5f1c1f71297641af80328fe922ea621d?v=8ba2279cca7145488827350adc88ae3e&source=copy_link",
          "mode": "url"
        },
        "simple": false,
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        896,
        1792
      ],
      "id": "f7fc74f0-9ef9-4f43-aab4-1a58cd3f6c02",
      "name": "Update tasks in Notion",
      "credentials": {
        "notionApi": {
          "id": "Z0VZpF1Px5Bdy5Is",
          "name": "KAI Notion"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "https://www.notion.so/5f1c1f71297641af80328fe922ea621d?v=8ba2279cca7145488827350adc88ae3e&source=copy_link",
          "mode": "url"
        },
        "simple": false,
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        736,
        1792
      ],
      "id": "825684d1-717e-4fd8-b497-83922035db92",
      "name": "Update projects in Notion",
      "credentials": {
        "notionApi": {
          "id": "Z0VZpF1Px5Bdy5Is",
          "name": "KAI Notion"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "https://www.notion.so/787876b75dd24a8caaf77230e82bce48?v=01e44ef9be034fd4a3d71a78040b0a48&source=copy_link",
          "mode": "url"
        },
        "simple": false,
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        1040,
        1792
      ],
      "id": "dbd066e1-8c58-4c76-a967-d2b6099335de",
      "name": "Update error log in Notion",
      "credentials": {
        "notionApi": {
          "id": "Z0VZpF1Px5Bdy5Is",
          "name": "KAI Notion"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "operation": "update",
        "pageId": {
          "__rl": true,
          "value": "https://www.notion.so/005d89c7a9ee4ce0b5e37032e31012fc?v=1a060ddb30144e0daa89f4fa66b891de&source=copy_link",
          "mode": "url"
        },
        "simple": false,
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        1200,
        1792
      ],
      "id": "174e7256-a511-4ebd-867d-19896ce6009e",
      "name": "Update Goals log in Notion1",
      "credentials": {
        "notionApi": {
          "id": "Z0VZpF1Px5Bdy5Is",
          "name": "KAI Notion"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "mode": "url",
          "value": "=https://www.notion.so/5f1c1f71297641af80328fe922ea621d?v=8ba2279cca7145488827350adc88ae3e&source=copy_link",
          "__regex": "(?:https|http)://www\\.notion\\.so/(?:[a-z0-9-]{2,}/)?([0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12})"
        },
        "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Title', ``, 'string') }}",
        "simple": false,
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Task Name|title",
              "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('propertyValues0_Title', ``, 'string') }}"
            },
            {
              "key": "Status|select",
              "selectValue": "To Do"
            },
            {
              "key": "Notes|rich_text",
              "richText": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('propertyValues2_Rich_Text', ``, 'boolean') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        208,
        1824
      ],
      "id": "674cb163-0e61-44d3-8f49-b452ad1d4eb0",
      "name": "Create a Task in Notion",
      "credentials": {
        "notionApi": {
          "id": "Z0VZpF1Px5Bdy5Is",
          "name": "KAI Notion"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "=https://www.notion.so/37eee76b57414fd6a328528003464218?v=8dabee2acc6a4513a3cd927405848105&source=copy_link",
          "mode": "url"
        },
        "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Title', ``, 'string') }}",
        "simple": false,
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Project ID|rich_text",
              "textContent": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('propertyValues0_Text', ``, 'string') }}"
            },
            {
              "key": "Timescale / Deadline|date"
            },
            {
              "key": "Name|title",
              "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('propertyValues2_Title', ``, 'string') }}"
            },
            {
              "key": "Files|files",
              "fileUrls": {
                "fileUrl": [
                  {
                    "name": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('propertyValues3_fileUrl0_Name', ``, 'string') }}",
                    "url": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('propertyValues3_fileUrl0_File_URL', ``, 'string') }}"
                  }
                ]
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        368,
        1824
      ],
      "id": "cb3eb5a1-c2ab-4360-869b-04d14718160a",
      "name": "Create a Project in Notion",
      "credentials": {
        "notionApi": {
          "id": "Z0VZpF1Px5Bdy5Is",
          "name": "KAI Notion"
        }
      }
    },
    {
      "parameters": {
        "resource": "databasePage",
        "databaseId": {
          "__rl": true,
          "value": "=https://www.notion.so/005d89c7a9ee4ce0b5e37032e31012fc?v=1a060ddb30144e0daa89f4fa66b891de&source=copy_link",
          "mode": "url"
        },
        "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Title', ``, 'string') }}",
        "simple": false,
        "propertiesUi": {
          "propertyValues": [
            {
              "key": "Description|rich_text",
              "textContent": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('propertyValues0_Text', ``, 'string') }}"
            },
            {
              "key": "Goal|title",
              "title": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('propertyValues1_Title', ``, 'string') }}"
            },
            {
              "key": "Notes|rich_text",
              "textContent": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('propertyValues2_Text', ``, 'string') }}"
            },
            {
              "key": "Target Date|date",
              "range": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('propertyValues3_Range', ``, 'boolean') }}",
              "includeTime": false
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        528,
        1824
      ],
      "id": "28351239-df91-4092-b8cd-940fe578a064",
      "name": "Create Goals in Notion",
      "credentials": {
        "notionApi": {
          "id": "Z0VZpF1Px5Bdy5Is",
          "name": "KAI Notion"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        800,
        960
      ],
      "id": "7d959337-1e42-4d67-922b-763b345a2e98",
      "name": "Loop Over Items"
    }
  ],
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          },
          {
            "node": "Input Message Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Audio": {
      "main": [
        [
          {
            "node": "Translate to Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Translate to Text": {
      "main": [
        [
          {
            "node": "KAI Project Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download PDF": {
      "main": [
        [
          {
            "node": "Extract from PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Image": {
      "main": [
        [
          {
            "node": "Fix mimeType",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix mimeType": {
      "main": [
        [
          {
            "node": "Photo to text1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Photo": {
      "main": [
        [
          {
            "node": "Fix mimeType1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fix mimeType1": {
      "main": [
        [
          {
            "node": "Photo to text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Photo to text": {
      "main": [
        [
          {
            "node": "Extract Text & Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Group Similar Documents",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract Error Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Spreadsheet": {
      "main": [
        [
          {
            "node": "Extract from Spreadsheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from PDF": {
      "main": [
        [
          {
            "node": "Extract Text4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Spreadsheet": {
      "main": [
        [
          {
            "node": "Extract Text1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supported Document File Types": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Group Similar Documents": {
      "main": [
        [
          {
            "node": "Document Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input Message Router": {
      "main": [
        [
          {
            "node": "Extract Text",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Audio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Photo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supported Document File Types",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Document Router": {
      "main": [
        [
          {
            "node": "Download Image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download PDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Word Document",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download Spreadsheet",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download JSON",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Download XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download JSON": {
      "main": [
        [
          {
            "node": "Extract from JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from JSON": {
      "main": [
        [
          {
            "node": "Extract Text2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download XML": {
      "main": [
        [
          {
            "node": "Extract from XML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from XML": {
      "main": [
        [
          {
            "node": "Extract Text3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Word Document": {
      "main": [
        [
          {
            "node": "File to Base64",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File to Base64": {
      "main": [
        [
          {
            "node": "Convert to text (convertapi.com)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to text (convertapi.com)": {
      "main": [
        [
          {
            "node": "Download Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download Text": {
      "main": [
        [
          {
            "node": "Extract Text5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Photo to text1": {
      "main": [
        [
          {
            "node": "Extract Text & Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text": {
      "main": [
        [
          {
            "node": "KAI Project Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text & Content": {
      "main": [
        [
          {
            "node": "KAI Project Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Error Message": {
      "main": [
        [
          {
            "node": "KAI Project Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text1": {
      "main": [
        [
          {
            "node": "KAI Project Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text2": {
      "main": [
        [
          {
            "node": "KAI Project Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text3": {
      "main": [
        [
          {
            "node": "KAI Project Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text4": {
      "main": [
        [
          {
            "node": "KAI Project Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Text5": {
      "main": [
        [
          {
            "node": "KAI Project Manager",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "KAI Project Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "KAI Project Manager",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "KAI Project Manager": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          },
          {
            "node": "Thinking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "KAI Project Manager",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Typing....": {
      "main": [
        []
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Thinking",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Thinking": {
      "main": [
        [],
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get many databases in Notion": {
      "ai_tool": [
        [
          {
            "node": "KAI Project Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update tasks in Notion": {
      "ai_tool": [
        [
          {
            "node": "KAI Project Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update projects in Notion": {
      "ai_tool": [
        [
          {
            "node": "KAI Project Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update error log in Notion": {
      "ai_tool": [
        [
          {
            "node": "KAI Project Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update Goals log in Notion1": {
      "ai_tool": [
        [
          {
            "node": "KAI Project Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create a Task in Notion": {
      "ai_tool": [
        [
          {
            "node": "KAI Project Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create a Project in Notion": {
      "ai_tool": [
        [
          {
            "node": "KAI Project Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Create Goals in Notion": {
      "ai_tool": [
        [
          {
            "node": "KAI Project Manager",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Typing....",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "callerPolicy": "workflowsFromSameOwner",
    "errorWorkflow": "bt640nzcV4XIfXBO"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "cc8efe24-8146-435a-9167-d305ae4360b2",
  "triggerCount": 1,
  "shared": [
    {
      "createdAt": "2025-09-18T14:05:34.921Z",
      "updatedAt": "2025-09-18T14:05:34.921Z",
      "role": "workflow:owner",
      "workflowId": "HdA0vwJvVM5fN29P",
      "projectId": "BIaHEqy8o0sp0UfS"
    }
  ],
  "tags": [
    {
      "createdAt": "2025-08-02T02:49:06.714Z",
      "updatedAt": "2025-08-02T02:49:06.714Z",
      "id": "CZpd6RJyE4jKvzFK",
      "name": "KAI"
    },
    {
      "createdAt": "2025-07-26T16:26:55.546Z",
      "updatedAt": "2025-07-26T16:26:55.546Z",
      "id": "Flb96dPUkr8Xp6XU",
      "name": "github"
    },
    {
      "createdAt": "2025-07-26T16:26:59.056Z",
      "updatedAt": "2025-07-26T16:26:59.056Z",
      "id": "ymrfpVGdtdxogJzd",
      "name": "v1"
    }
  ]
}